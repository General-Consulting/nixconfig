diff --git a/configuration.nix b/configuration.nix
index c0219bc..1bae335 100644
--- a/configuration.nix
+++ b/configuration.nix
@@ -12,15 +12,20 @@
     [ # Include the results of the hardware scan.
       ./hardware-configuration.nix
      # ./home-manager.nix
-     /home/geoff/nixconfig/nixos-hardware/common/cpu/amd
-     /home/geoff/nixconfig/nixos-hardware/common/gpu/amd
-     /home/geoff/nixconfig/nixos-hardware/common/cpu/amd/pstate.nix
+     ./nixos-hardware/common/cpu/amd
+     ./nixos-hardware/common/gpu/amd
+     ./nixos-hardware/common/cpu/amd/pstate.nix
     ];
 
   # Bootloader.
   boot.loader.systemd-boot.enable = true;
   boot.loader.efi.canTouchEfiVariables = true;
 
+  boot.kernelParams = [
+  "video=DP-3:3840x2160@60"
+  "video=HDMI-A-1:3840x2160@60"
+  ];
+
   networking.hostName = "nixos"; # Define your hostname.
 
   nix.settings.experimental-features = ["nix-command" "flakes"];
@@ -43,9 +48,26 @@
     LC_TIME = "en_US.UTF-8";
   };
 
+  i18n.consoleFont = "latarcyrheb-sun32";
+
+  fonts.packages = with pkgs; [
+  noto-fonts
+  noto-fonts-cjk
+  noto-fonts-emoji
+  liberation_ttf
+  fira-code
+  fira-code-symbols
+  mplus-outline-fonts.githubRelease
+  dina-font
+  proggyfonts
+];
+
   services.xserver = {
+    excludePackages = [pkgs.xterm];
     enable = true;
     videoDrivers = [ "displaylink" "modesetting" "amdgpu"];
+    dpi = 180;
+
     desktopManager = {
       pantheon.enable = false;
       pantheon.extraWingpanelIndicators = with pkgs; [
@@ -60,7 +82,6 @@
         extraPackages = hpkgs: [
           hpkgs.xmobar
         ];
-        config = builtins.readFile /home/geoff/nixconfig/dotfiles/xmonad.hs;
       };
 
 
@@ -68,16 +89,11 @@
 
     displayManager = {
       defaultSession = "none+xmonad";
-      lightdm.enable = true;
-      lightdm.greeters.enso = {
-        enable = true;
-        blur = true;
-      };
+      startx.enable = true;
     };
     layout = "us";
-    xkbVariant = "";
-    displayManager.setupCommands = ''
-      LEFT='DP-1'
+    displayManager.sessionCommands = ''
+      LEFT='DP-3'
       RIGHT='HDMI-1'
       ${pkgs.xorg.xrandr}/bin/xrandr --output $LEFT --left-of $RIGHT
       ${pkgs.xorg.xmodmap}/bin/xmodmap /home/geoff/nixconfig/dotfiles/Xmodmap
@@ -97,14 +113,6 @@
   ];
 
 
-  systemd.user.services.indicatorapp = {
-    description = "indicator-application-gtk3";
-    wantedBy = [ "graphical-session.target" ];
-    partOf = [ "graphical-session.target" ];
-    serviceConfig = {
-      ExecStart = "${pkgs.indicator-application-gtk3}/libexec/indicator-application/indicator-application-service";
-    };
-  };
 
   sound.enable = true;
   hardware.pulseaudio.enable = false;
@@ -131,10 +139,8 @@
     shell = pkgs.zsh;
   };
 
-  # Allow unfree packages
   nixpkgs.config.allowUnfree = true;
 
-  # List packages installed in system profile. To search, run:
   # $ nix search wget
   environment.systemPackages = with pkgs; [
     appeditor
@@ -153,9 +159,14 @@
     fzf
     arandr
     dmenu
+    nixpkgs-fmt
   ];
 
 
+  environment.variables = {
+    GDK_SCALE = "2";
+    GDK_DPI_SCALE = "0.5";
+  };
 
 
   programs.noisetorch.enable = true;
@@ -183,7 +194,8 @@
   # Open ports in the firewall.
   # Or disable the firewall altogether.
   networking.firewall.enable = true;
-  networking.firewall.allowedTCPPorts = [ 2375 22 80 443 4000];
+  networking.firewall.allowedTCPPorts = [ 2375 22 80 443 ];
+  networking.firewall.allowedTCPPortRanges = [ {from = 4000; to = 5550;} ];
   networking.firewall.allowedUDPPorts = [ 24800 ];
 
   system.stateVersion = "23.05"; 
diff --git a/deploy_os.sh b/deploy_os.sh
index 62820b2..0db8869 100755
--- a/deploy_os.sh
+++ b/deploy_os.sh
@@ -1 +1 @@
-cp configuration.nix /etc/nixos/ && nixos-rebuild switch
+sudo nixos-rebuild switch -I nixos-config=./configuration.nix
diff --git a/dotfiles/.Xresources b/dotfiles/.Xresources
new file mode 100644
index 0000000..dd95f71
--- /dev/null
+++ b/dotfiles/.Xresources
@@ -0,0 +1 @@
+Xft.dpi: 288
diff --git a/dotfiles/xinitrc b/dotfiles/xinitrc
new file mode 100644
index 0000000..e2a477a
--- /dev/null
+++ b/dotfiles/xinitrc
@@ -0,0 +1,5 @@
+
+      LEFT='DP-3'
+      RIGHT='HDMI-1'
+      ${pkgs.xorg.xrandr}/bin/xrandr --output $LEFT --left-of $RIGHT
+      ${pkgs.xorg.xmodmap}/bin/xmodmap /home/geoff/nixconfig/dotfiles/Xmodmap
\ No newline at end of file
diff --git a/dotfiles/xmonad.hs b/dotfiles/xmonad.hs
index 0911ccd..2d514fe 100644
--- a/dotfiles/xmonad.hs
+++ b/dotfiles/xmonad.hs
@@ -1,10 +1,13 @@
 import XMonad
-
+import XMonad.Operations
 import XMonad.Layout.Magnifier
 import XMonad.Util.EZConfig
+import XMonad.Util.SpawnOnce
 import XMonad.Util.Ungrab
 import XMonad.Hooks.EwmhDesktops
 import XMonad.Layout.ThreeColumns
+import Graphics.X11.ExtraTypes.XF86
+import Data.Bits ((.|.))
 
 
 
@@ -12,17 +15,25 @@ main :: IO ()
 main = xmonad $ ewmhFullscreen $ ewmh $ myConfig
 
 myConfig = def
-    { modMask    = mod4Mask  -- Rebind Mod to the Super key
+    { 
+      terminal   = "alacritty"
+    , modMask    = mod4Mask  -- Rebind Mod to the Super key
     , layoutHook = myLayout  -- Use custom layouts
     }
   `additionalKeysP`
     [ ("M-S-z", spawn "xscreensaver-command -lock")
     , ("M-C-s", unGrab *> spawn "scrot -s"        )
-    , ("M-f"  , spawn "firefox"                   )
+    , ("M-g"  , spawn "google-chrome-stable --user-data-directory=/home/geoff/.config/google-chrome/Profile\\ 1/"                   )
     , ("M-f"  , spawn "firefox"                   )
     , ("M-p"  , spawn "rofi -show run")
+    ] 
+  `additionalKeys`
+    [ 
+      
+      ((0, xF86XK_AudioLowerVolume         ), spawn "amixer set Master 5%-")
+    , ((0, xF86XK_AudioRaiseVolume         ), spawn "amixer set Master 5%+")
+    , ((mod4Mask .|. shiftMask, xK_m        ), spawn "echo 'Hi, mom!' | dzen2 -p 4") ]
 
-    ]
 
 myLayout = tiled ||| Mirror tiled ||| Full ||| threeCol
   where
@@ -31,3 +42,6 @@ myLayout = tiled ||| Mirror tiled ||| Full ||| threeCol
     nmaster  = 1      -- Default number of windows in the master pane
     ratio    = 1/2    -- Default proportion of screen occupied by master pane
     delta    = 3/100  -- Percent of screen to increment by when resizing panes
+
+
+fd
\ No newline at end of file
diff --git a/home.nix b/home.nix
index 196c7d5..d353743 100644
--- a/home.nix
+++ b/home.nix
@@ -18,12 +18,20 @@
     pkgs.direnv
     pkgs.chromium
     pkgs.google-chrome
+    pkgs.zoom-us
+    pkgs.xclip
+    pkgs.scrot
+    pkgs.newman
+    pkgs.xorg.xev
+    pkgs.bruno
   ];
 
   # Home Manager is pretty good at managing dotfiles. The primary way to manage
   # plain files is through 'home.file'.
   home.file = {
    ".Xmodmap".source = ../../nixconfig/dotfiles/Xmodmap;
+   ".xmonad/xmonad.hs".source = ../../nixconfig/dotfiles/xmonad.hs;
+   ".xinitrc".source = ../../nixconfig/dotfiles/xinitrc;
   };
 
   programs.rofi = {
@@ -31,12 +39,8 @@
     terminal = "${pkgs.alacritty}/bin/alacritty";
   };
 
-
-  programs.bash = {
+  programs.zsh = {
     enable = true;
-    historyControl = [ "ignoredups" ];
-    historySize = 1000000;
-    historyFileSize = 1000000;
     initExtra = ''
       set -o vi
     '';
@@ -51,9 +55,11 @@
 
   # Let Home Manager install and manage itself.
   programs.home-manager.enable = true;
+
   programs.direnv = {
     enable = true;
     enableBashIntegration = true;
+    enableZshIntegration = true;
     nix-direnv.enable = true;
   };
 
diff --git a/machines/hardware-configuration.nix b/machines/hardware-configuration.nix
deleted file mode 100644
index 717d9de..0000000
--- a/machines/hardware-configuration.nix
+++ /dev/null
@@ -1,39 +0,0 @@
-# Do not modify this file!  It was generated by ‘nixos-generate-config’
-# and may be overwritten by future invocations.  Please make changes
-# to /etc/nixos/configuration.nix instead.
-{ config, lib, pkgs, modulesPath, ... }:
-
-{
-  imports =
-    [ (modulesPath + "/installer/scan/not-detected.nix")
-    ];
-
-  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "thunderbolt" "usb_storage" "usbhid" "sd_mod" ];
-  boot.initrd.kernelModules = [ ];
-  boot.kernelModules = [ "kvm-amd" ];
-  boot.extraModulePackages = [ ];
-
-  fileSystems."/" =
-    { device = "/dev/disk/by-uuid/7d91174e-4016-465d-bdc3-dec3bcfd0420";
-      fsType = "ext4";
-    };
-
-  fileSystems."/boot" =
-    { device = "/dev/disk/by-uuid/9276-8855";
-      fsType = "vfat";
-    };
-
-  swapDevices = [ ];
-
-  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
-  # (the default) this is the recommended approach. When using systemd-networkd it's
-  # still possible to use this option, but it's recommended to use it in conjunction
-  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
-  networking.useDHCP = lib.mkDefault true;
-  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
-  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
-  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;
-
-  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
-  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
-}
diff --git a/machines/my-autorandr.nix b/machines/my-autorandr.nix
deleted file mode 100644
index 0f62ff9..0000000
--- a/machines/my-autorandr.nix
+++ /dev/null
@@ -1,118 +0,0 @@
-# Custom configurations:
-#  (should trigger automatically)
-# [ both primary external ]
-#
-# Default configurations:
-#  (can be used with unknown displays)
-# [ horizontal vertical common clone-largest ]
-
-{ config, pkgs, ... }:
-let
-  mkOption = pkgs.lib.mkOption;
-  types = pkgs.lib.types;
-  cfg = config.my-autorandr;
-in {
-  options =
-    let
-      xrandr-display = types.enum [
-        "eDP-1"
-        "DP-1"
-        "HDMI-1"
-        "DP-2"
-        "HDMI-2"
-        "DP-3"
-        "HDMI-3"
-        "DP-1-4"
-        "DP-1-5"
-        "DP-1-6"
-        "eDP-1-2"
-      ];
-      displayOptions = {
-        options = {
-          name = mkOption {
-            description = "xrandr name for the display";
-            type = xrandr-display;
-          };
-          fp = mkOption {
-            description = "value from 'autorandr --fingerprint'";
-            type = types.str;
-          };
-        };
-      };
-      in {
-        my-autorandr = {
-          display1 = mkOption {
-            description = "main display for custom layouts";
-            type = types.submodule displayOptions;
-          };
-          display2 = mkOption {
-            description = "secondary display for custom layouts";
-            type = types.submodule displayOptions;
-          };
-        };
-  };
-  config = {
-    programs.autorandr = {
-      profiles = {
-        both = {
-          config = {
-            "${cfg.display1.name}" = {
-              enable = true;
-              mode = "1920x1080";
-              primary = true;
-              position = "0x0";
-              rate = "60.00";
-              crtc = 1;
-            };
-            "${cfg.display2.name}" = {
-              enable = true;
-              mode = "1920x1080";
-              position = "1920x0";
-              rate = "60.00";
-              crtc = 0;
-            };
-          };
-          fingerprint = {
-            "${cfg.display1.name}" = "${cfg.display1.fp}";
-            "${cfg.display2.name}" = "${cfg.display2.fp}";
-          };
-        };
-        external = {
-          config = {
-            "${cfg.display2.name}" = {
-              enable = true;
-              mode = "1920x1080";
-              position = "0x0";
-              primary = true;
-              rate = "60.00";
-              crtc = 0;
-            };
-          };
-          fingerprint = {
-            "${cfg.display1.name}" = "${cfg.display1.fp}";
-            "${cfg.display2.name}" = "${cfg.display2.fp}";
-          };
-        };
-        primary = {
-          config = {
-            "${cfg.display1.name}" = {
-              enable = true;
-              mode = "1920x1080";
-              position = "0x0";
-              primary = true;
-              rate = "60.00";
-              crtc = 0;
-            };
-          };
-          fingerprint = {
-            "${cfg.display1.name}" = "${cfg.display1.fp}";
-          };
-        };
-      };
-    };
-  };
-}
-
-# User configuration for autorandr
-
-# adapted from: https://github.com/efim/dotfiles/blob/18c3dd12a596d5fd2a0ca3bc7b734fe9206637b0/nixpkgs/my-autorandr.nix
